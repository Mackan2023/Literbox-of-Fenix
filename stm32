#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <ESPAsyncWebServer.h>
#include <string.h>
#include <stdio.h>
#include "sha256.h" // Exempel på en SHA-256-bibliotek



const char* ssid = "router namn";
const char* password = "lösenordet";

AsyncWebServer server(80);

// Beräkna hashen från den nedladdade filen
void calculateHash(const uint8_t* fileContent, size_t fileSize, char* result) {
    // Använd SHA-256 eller annan hashfunktion här
    // Exempel: sha256(fileContent, fileSize, result);
    // 'result' kommer att innehålla hashen som en sträng
}
// Jämför hashen med den sparade hashen
if (strcmp(calculatedHash, receivedHashFromESP8266) == 0) {
    // Filen är verifierad
    // Installera .bin-filen på STM32
    // Starta om enheten
} else {
    // Felaktig fil
    // Implementera din kod här
}
// Hantera uppdatering av binärfil
void handleUpdate(AsyncWebServerRequest* request) {
    // Validera filen (checksum, format, etc.)
    if (isValidFile(request->content())) {
        // Installera den nya firmwaren
        installFirmware(request->content());

        // Verifiera den nya firmwaren
        if (verifyFirmware()) {
            // Starta om enheten
            ESP.restart();
        } else {
            // Återställ till tidigare firmware om verifieringen misslyckas
            rollbackToPreviousFirmware();
        }
    } else {
        // Felaktig fil – skicka felmeddelande
        request->send(400, "text/plain", "Invalid file");
    }
}

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.println("Ansluter till WiFi...");
    }
    Serial.println("Ansluten till WiFi!");

    server.on("/update", HTTP_POST, handleUpdate);
    server.begin();
}

void loop() {
    // Din övriga kod här
}